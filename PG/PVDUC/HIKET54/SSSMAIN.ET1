Attribute VB_Name = "SSSMAIN_ET1"
Option Explicit
'
'for NewRRR VA03 by SWaN Corp.
'最終更新日=2002/8/28
''''''''''''''''''''''''''''''
Sub SSS_CLOSE()
    '
    Call DB_End
'    Call CRW_END
End Sub

'ファイルにカレントレコードの追加処理を行う。
Function SSSMAIN_Append()
    If SSS_UPDATEFL Then
        ' 一行追加  PL/SQL対応
        G_PlCnd.nJobMode = 0  'Insert MODE
        FR_SSSMAIN.Enabled = False
        SSSMAIN_Append = INQ_UPDATE()
        FR_SSSMAIN.Enabled = True
        PP_SSSMAIN.SuppressGotLostFocus = 1
    Else
        MsgBox "このデータは追加できません。"
        SSSMAIN_Append = 0
    End If
End Function

'追加モードになるときの処理を行う。
Function SSSMAIN_AppendC()
'   If FR_SSSMAIN.BackColor <> &HC0C0C0 Then FR_SSSMAIN.BackColor = &HC0C0C0
    SSSMAIN_AppendC = True
End Function

'画面表示前の初期設定処理を行う。
Function SSSMAIN_BeginPrg(PP As clsPP)
    If App.PrevInstance Then
        MsgBox "【" & Trim(SSS_PrgNm) & "】は既に起動中です。重複して起動する事はできません。", vbExclamation Or vbOKOnly, SSS_PrgNm
        End
    End If
    ' "しばらくお待ちください" ウィンドウ表示  97/05/29
    Load ICN_ICON
    SSSMAIN_BeginPrg = True
    '----------------------------------
    '   SSSWIN プログラム起動チェック
    '----------------------------------
    Call SSSWIN_INIT
    Call SSSWIN_OPEN
    Call Set_StripeColor
    Call INITDSP
    ' クリスタルレポート
'    If CRW_INIT() = False Then
'        Call Error_Exit("ERROE CRW_INIT")
'    End If
    ' "しばらくお待ちください" ウィンドウ消去  97/05/29
    Unload ICN_ICON
End Function

'終了時の後処理を行う。
Function SSSMAIN_Close()
    Call SSSWIN_CLOSE
    SSSMAIN_Close = True
End Function

'処理対象のデータの中のカレントレコードを再度読み込む。
Function SSSMAIN_Current()
    SSSMAIN_Current = DSPTRN()
End Function

'ファイルからカレントレコードを削除する。
Function SSSMAIN_Delete()
    Dim rtn As Integer
    '
    If SSS_UPDATEFL Then
        ' 一行追加  PL/SQL対応
        G_PlCnd.nJobMode = 2  'Delete MODE
        FR_SSSMAIN.Enabled = False
        rtn = DELTRN()
        FR_SSSMAIN.Enabled = True
        PP_SSSMAIN.SuppressGotLostFocus = 1
        SSSMAIN_Delete = rtn
    Else
        MsgBox "このデータは削除できません。"
        SSSMAIN_Delete = 0
    End If
End Function

'処理対象のデータの中の先頭のレコードを読み込む。
Function SSSMAIN_First()
    SSSMAIN_First = False
End Function

'更新モードになるときの処理を行う。
Function SSSMAIN_Indicate()
    SSSMAIN_Indicate = 3
End Function

Function SSSMAIN_Init()
    SSS_UPDATEFL = True
End Function

'処理対象のデータの中の最終のレコードを読み込む。
Function SSSMAIN_Last()
    SSSMAIN_Last = False
End Function

'処理対象のデータの中からカレントの次のレコードを読み込む。
Function SSSMAIN_Next()
    SSSMAIN_Next = False
End Function

'処理対象のデータの中からカレントの一つ前のレコードを読み込む。
Function SSSMAIN_Prev()
    SSSMAIN_Prev = False
End Function

'処理対象のデータの範囲を設定する。
Function SSSMAIN_Select()
    SSSMAIN_Select = 2 '動作モードの変更を行わない
End Function

'ファイルの中のカレントレコードの更新を行う。
Function SSSMAIN_Update()
    If SSS_UPDATEFL Then
        ' 一行追加  PL/SQL対応
        G_PlCnd.nJobMode = 1  'Update MODE
        FR_SSSMAIN.Enabled = False
        SSSMAIN_Update = INQ_UPDATE()
        FR_SSSMAIN.Enabled = True
        'SSSMAIN_Update = 5
        PP_SSSMAIN.SuppressGotLostFocus = 1
    Else
        MsgBox "このデータは更新できません。"
        SSSMAIN_Update = 0
    End If
End Function

'更新モードになるときの処理を行う。
Function SSSMAIN_UpdateC()
'   If FR_SSSMAIN.BackColor <> &HE0FFFF Then FR_SSSMAIN.BackColor = &HE0FFFF
    SSSMAIN_UpdateC = True
End Function

Sub WLS_SLIST_MOVE(ByVal SlistCom As Variant, ByVal LENGTH As Integer)
    PP_SSSMAIN.SlistCom = LeftWid$(SlistCom, LENGTH)
    'PP_SSSMAIN.CursorDirection = 1
    'WLS_SLISTCOM = SlistCom
End Sub


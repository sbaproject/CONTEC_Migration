Attribute VB_Name = "THSFP61_E01"
Option Explicit
'
' スロット名        : 画面処理スロット
' ユニット名        : THSPR61.E01
' 記述者            : Standard Library
' 作成日付          : 2011/02/21
' 使用プログラム名  : THSFP61
'
Global GV_UNYDT     As String

Sub Chain_Proc()

End Sub

Sub InitDsp()
    '背景色設定
    AE_BackColor(1) = &H8000000F
    
    CL_SSSMAIN(0) = 1
    CL_SSSMAIN(1) = 1
    CL_SSSMAIN(5) = 1
    CL_SSSMAIN(7) = 1
    
    '運用日取得
    Call DB_GetFirst(DBN_UNYMTA, 1, BtrNormal)
    GV_UNYDT = DB_UNYMTA.UNYDT
    
    
    '実行権限の取得
    Call Get_Authority(DB_UNYMTA.UNYDT)
    
    
End Sub

Public Function SSS_CLOSE()

End Function
Function SSSMAIN_BeginPrg()
'画面表示前の初期設定処理を行う。
    If App.PrevInstance Then
        MsgBox "【" & Trim(SSS_PrgNm) & "】は既に起動中です。重複して起動する事はできません。", vbExclamation Or vbOKOnly, SSS_PrgNm
        End
    End If
    ' "しばらくお待ちください" ウィンドウ表示
    Load ICN_ICON
    SSSMAIN_BeginPrg = True
    SSS_ExportFLG = False                           '初期値：印刷処理
    '----------------------------------
    '   SSSWIN プログラム起動チェック
    '----------------------------------
    Call SSSWIN_INIT
    Call SSSWIN_OPEN
    '
    'デフォルト用紙サイズと印刷の向きを読み取り
    Call Set_defaultPrintInfo
    
    Call InitDsp
    ' "しばらくお待ちください" ウィンドウ消去
    Unload ICN_ICON
End Function

Function SSSMAIN_Close()
'終了時の後処理を行う。
    Call SSSWIN_CLOSE
    SSSMAIN_Close = True
End Function

Function SSSMAIN_Current()
    SSSMAIN_Current = 0
End Function

Function SSSMAIN_Init()
    '
    Call WORKING_VIEW(False)
    SSSMAIN_Init = True
End Function

Function SSSMAIN_Last()
    SSSMAIN_Last = 0
End Function

Function SSSMAIN_Next()
    SSSMAIN_Next = 0
End Function

Function SSSMAIN_Select()
'処理対象のデータの範囲を設定する。
    'SSSMAIN_Select = SET_GAMEN_KEY()
End Function

Function SSSMAIN_Update()
'ファイルの中のカレントレコードの更新を行う。
    Dim Wk
    'MsgBox "データを更新しました。"
    SSSMAIN_Update = 9
End Function

Function VSTART_GetEvent() As Integer
    '
    VSTART_GetEvent = True
    '
    '#Start/2002.1.23
    If CP_SSSMAIN(PP_SSSMAIN.Px).StatusC = Cn_Status1 Then
        Call AE_SetCheck_SSSMAIN(AE_Val2(CP_SSSMAIN(PP_SSSMAIN.Px)), Cn_Status6, True)
    End If
    Call AE_RecalcAll_SSSMAIN
    If AE_CompleteCheck_SSSMAIN(0) <> 0 Then
        Call AE_CursorSub_SSSMAIN(Cn_CuInCompletePx)
        PP_SSSMAIN.CursorSet = True
        VSTART_GetEvent = False
        Exit Function
    End If
    '#End/2002.1.23
    SSS_Makkb = SSS_VIEW
'    Call SSS_LIST(SSS_VIEW)
    '
End Function

Sub WLS_SLIST_MOVE(ByVal SlistCom As Variant, ByVal LENGTH As Integer)
    PP_SSSMAIN.SlistCom = LeftWid$(SlistCom, LENGTH)
End Sub

Sub WORKING_VIEW(Sw As Integer)
    'ゲージの表示 etc...
    FR_SSSMAIN!GAUGE.FloodPercent = 0
    If Sw Then
        Screen.MousePointer = 11                    '砂時計
        Call AE_StatusOut(PP_SSSMAIN, "作業中！ しばらくお待ちください。", Cn_BLUE)
        FR_SSSMAIN!GAUGE.Visible = True
        FR_SSSMAIN!CM_LCANCEL.Visible = True
    Else
        Screen.MousePointer = 0                     '既定値
        FR_SSSMAIN!TX_Message.Text = ""
        FR_SSSMAIN!GAUGE.Visible = False
        FR_SSSMAIN!CM_LCANCEL.Visible = False
    End If
    DoEvents
End Sub


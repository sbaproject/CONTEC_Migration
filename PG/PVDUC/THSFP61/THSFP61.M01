Attribute VB_Name = "THSFP61_M01"
Option Explicit
'
' スロット名        : クライアント別受注日記帳・メインファイル更新スロット
' ユニット名        : THSFP61.M01
' 記述者            : Standard Library
' 作成日付          : 2011/02/21
' 使用プログラム名  : THSFP61
'

Function CHK_LCTL() As Integer
End Function

Function ENDCHK() As Integer
End Function

Function NEXTCHK() As Integer
End Function

Function NPSNCHK() As Integer
End Function

Function RPSNCHK() As Integer
End Function

Function SEL_RECORD() As String
End Function

Sub Set_Value()
End Sub

Public Function AnsiTrimStringByByteCount(ArgSrc As String, _
                                          ArgCnt As Long) As String
'概要：全角半角まじりのＵｎｉＣｏｄｅ文字列を、   ■■■■
'                   文字をきらないように指定されたバイト数に丸めた文字列を返す。
'                                                 ■■■■
'引数：ArgSrc ,Input ,String ,元の文字列
'　　：ArgCnt ,Input ,Long   ,丸める文字数

    Dim strResult           As String
    Dim strTmpChr           As String
    Dim lngLength           As Long
    Dim lngCalCnt           As Long
    Dim lngTmpCnt           As Long
    Dim lngI                As Long
    
    
    strResult = ""
    lngLength = Len(Trim(ArgSrc))
    lngCalCnt = 0
    For lngI = 1 To lngLength
        strTmpChr = Mid(ArgSrc, lngI, 1)
        lngTmpCnt = AnsiLenB(strTmpChr)
        If lngCalCnt + lngTmpCnt > ArgCnt Then
            GoTo AnsiTrimStringByByteCount_End
          Else
            lngCalCnt = lngCalCnt + lngTmpCnt
            strResult = strResult & strTmpChr
        End If
    Next
    
AnsiTrimStringByByteCount_End:

    If AnsiLenB(strResult) < ArgCnt Then
        AnsiTrimStringByByteCount = strResult & String(ArgCnt - AnsiLenB(strResult), " ")
      Else
        AnsiTrimStringByByteCount = strResult
    End If
    
End Function

Public Function AnsiTrimStringByMojiCount(strSrc As String, _
                                          lngDstCount As Long) As String
'概要：全角半角まじりのＵｎｉＣｏｄｅ文字列を、   ■■■
'                   文字をきらないように指定された文字数（≠バイト数）に丸めた文字列を返す。
'                                                 ■■■
'引数：strSrc     ,Input,String,元の文字列
'　　：lngDstCount,Input,Long,丸める文字数
    Dim strDst          As String
    Dim strTmp          As String
    Dim lngSrcCount     As Long
    Dim lngCalCount     As Long
    Dim lngTmpCount     As Long
    Dim strFmt          As String
    Dim lngI            As Long
    
    strDst = ""
    lngSrcCount = Len(strSrc)
    lngCalCount = 0
    For lngI = 1 To lngSrcCount
        strTmp = Mid(strSrc, lngI, 1)
        lngTmpCount = AnsiLenB(strTmp)
        If lngCalCount + lngTmpCount > lngDstCount Then
            GoTo AnsiTrimStringByMojiCount_End
          Else
            lngCalCount = lngCalCount + lngTmpCount
            strDst = strDst & strTmp
        End If
    Next
    
AnsiTrimStringByMojiCount_End:

    strFmt = "!"
    For lngI = 1 To lngDstCount
        strFmt = strFmt & "@"
    Next
    strDst = Format(strDst, strFmt)
    AnsiTrimStringByMojiCount = strDst
    
End Function

Public Function AnsiInStrB(varArg1 As Variant, _
                           varArg2 As Variant, _
                  Optional varArg3 As Variant) As Long
'概要：文字列位置の検索
'引数：varArg1,Input,Variant,検索開始位置 or 検索対象文字列
'　　：varArg2,Input,Variant,検索文字列
'　　：varArg3,Input,Variant(Optional),検索文字列(省略可能)
'説明Ａｎｓｉコードのバイトオーダで検索文字列の文字位置(文字数)を返す
    Dim lngPos          As Long
    
#If Win32 Then
    If IsNumeric(varArg1) Then
        lngPos = LenB(AnsiLeftB(varArg2, varArg1))
        AnsiInStrB = InStrB(varArg1, AnsiStrConv(varArg2, vbFromUnicode), AnsiStrConv(varArg3, vbFromUnicode))
      Else
        AnsiInStrB = InStrB(AnsiStrConv(varArg1, vbFromUnicode), AnsiStrConv(varArg2, vbFromUnicode))
    End If
  #Else
    If IsNumeric(varArg1) Then
        lngPos = LenB(LeftB(varArg2, varArg1))
        AnsiInStrB = InStrB(varArg1, varArg2, varArg3)
      Else
        AnsiInStrB = InStrB(varArg1, varArg2)
    End If
#End If

End Function

Public Function AnsiLeftB(ByVal strArg As String, _
                          ByVal lngArg As Long) As String
'概要：左詰め文字列の抽出
'引数：strArg,Input,String,抽出元文字列
'　　：lngArg,Input,Long,抽出文字数
'説明：Ａｎｓｉコードのバイトオーダで文字列の左端から文字数分の文字列を返す

#If Win32 Then
    AnsiLeftB = AnsiStrConv(LeftB(AnsiStrConv(strArg, vbFromUnicode), lngArg), vbUnicode)
  #Else
    AnsiLeftB = LeftB(strArg, lngArg)
#End If

End Function

Public Function AnsiLenB(ByVal strArg As String) As Long
'概要：文字数カウント
'引数：strArg,Input,String,対象文字列
'説明：Ａｎｓｉコードのバイトオーダで文字列のﾊﾞｲﾄ数を返す

#If Win32 Then
    AnsiLenB = LenB(AnsiStrConv(strArg, vbFromUnicode))
  #Else
    AnsiLenB = LenB(strArg)
#End If

End Function

Public Function AnsiMidB(ByVal strArg As String, _
                         ByVal lngArg As Long, _
                      Optional varArg As Variant) As String
'概要：文字列の抽出
'引数：strArg,Input,String,抽出元文字列
'　　：lngArg,Input,Long,先頭からの抽出開始位置
'　　：varArg,Input,Variant(Optional),抽出文字数(省略可能)
'説明：Ａｎｓｉコードのバイトオーダで文字列の抽出開始位置から文字数分の文字列を返す

#If Win32 Then
    If IsMissing(varArg) Then
        AnsiMidB = AnsiStrConv(MidB(AnsiStrConv(strArg, vbFromUnicode), lngArg), vbUnicode)
      Else
        AnsiMidB = AnsiStrConv(MidB(AnsiStrConv(strArg, vbFromUnicode), lngArg, varArg), vbUnicode)
    End If
  #Else
    If IsMissing(varArg) Then
        AnsiMidB = MidB(strArg, lngArg)
      Else
        AnsiMidB = MidB(strArg, lngArg, varArg)
    End If
#End If

End Function

Public Function AnsiRightB(ByVal strArg As String, _
                           ByVal lngArg As Long) As String
'概要：右詰め文字列の抽出
'引数：strArg,Input,String,抽出元文字列
'　　：lngArg,Input,Long,抽出文字数
'説明：Ａｎｓｉコードのバイトオーダで文字列の右端から文字数分の文字列を返す

#If Win32 Then
    AnsiRightB = AnsiStrConv(RightB(AnsiStrConv(strArg, vbFromUnicode), lngArg), vbUnicode)
  #Else
    AnsiRightB = RightB(strArg, lngArg)
#End If

End Function

Public Function AnsiStrConv(varArg As Variant, _
                            varCnv As Variant)
'概要：文字列のｺｰﾄﾞ変換
'引数：varArg,Input,Variant,変換元文字列
'　　：varCnv,Input,Variant,conversion定数(StrConv 関数参照)
'説明：Ａｎｓｉ ⇔ ＵｎｉＣｏｄｅに変換した文字列を返す

#If Win32 Then
    AnsiStrConv = StrConv(varArg, varCnv)
  #Else
    AnsiStrConv = varArg
#End If

End Function


